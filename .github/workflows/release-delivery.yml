on: 
  release:
    types: [published]
name: 新版本发布
jobs:

  exportDockerRootFS:
    name: 构建和导出Windows构建的Docker rootfs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Docker 构建和导出
      run: |
        git submodule init
        git submodule update
        docker build -t windycloud/lanraragi_cn -f ./tools/build/docker/Dockerfile --build-arg INSTALL_PARAMETER=-w .
        docker create --name rootfs windycloud/lanraragi_cn
        docker export --output=package.tar rootfs
    - name: 上传 rootfs
      uses: actions/upload-artifact@main
      with:
        name: package
        path: package.tar 
        
  buildReleaseWSL:
    name: 构建Windows安装程序
    needs: exportDockerRootFS
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@main
    - name: 下载包
      uses: actions/download-artifact@main
      with:
        name: package
    - name: 构建MSI安装程序
      shell: powershell
      run: |
        [array]$installPath = &"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -property installationpath
        # Get first line of installPath in case we have multiple VS installs
        Import-Module (Join-Path $installPath[0] "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
        # Import the VS shell module 
        Enter-VsDevShell -VsInstallPath $installPath[0] -SkipAutomaticLocation
        $ErrorActionPreference = 'Continue'
        git submodule init
        git submodule update
        choco install nuget.commandline
        ./tools/build/windows/build.ps1
    - name: 上传安装程序
      uses: actions/upload-artifact@main
      with:
        name: wsl
        path: ./tools/build/windows/Karen/Setup/bin/LANraragi.msi

  uploadWSLRelease:
    name: 添加Windows安装程序以发布
    needs: buildReleaseWSL
    runs-on: ubuntu-latest
    steps:
    - name: 下载包
      uses: actions/download-artifact@main
      with:
        name: wsl
    - name: 上传安装程序以发布
      uses: JasonEtco/upload-to-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: wsl/LANraragi.msi application/octet-stream
#    - uses: Ilshidur/action-discord@master
#      env:
#        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#      with:
#        args: 'Windows Installer built and available on the Release page! <:logo:821516019179978772>🪟'

  buildLatestDocker:
    name: 构建最新的Docker图像
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: 设置 QEMU
      uses: docker/setup-qemu-action@master
    - name: 设置 Docker Buildx
      uses: docker/setup-buildx-action@master
    - uses: actions/cache@main
      with: 
        path: /tmp/buildxcache
        key: ${{ runner.os }}-docker-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-buildx-
    - name: Docker登录
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      run: |
        echo "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USERNAME} --password-stdin
    - name: 构建/推送最新的 Docker 镜像和带有版本号的标签
      run: |
        git submodule init
        git submodule update
        TAG=${GITHUB_REF:10:10}
        docker buildx build \
          --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --tag windycloud/lanraragi_cn:latest \
          --tag windycloud/lanraragi_cn:$TAG \
          --cache-from "type=local,src=/tmp/buildxcache" \
          --cache-to "type=local,dest=/tmp/buildxcache" \
          --file ./tools/build/docker/Dockerfile .
#    - uses: Ilshidur/action-discord@master
#      env:
#        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#      with:
#        args: 'Docker image built and available on Docker Hub! 🐳'

#  discordNotifications:
#    name: 发布一些通知
#    runs-on: ubuntu-latest
#    env:
#      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#    steps:
#    - name: 从 GITHUB_REF 中提取版本号
#      run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
#    - uses: Ilshidur/action-discord@master
#      with:
#        args: 'LANraragi {{ RELEASE_VERSION }} is now available! @everyone'
#    - uses: Ilshidur/action-discord@master
#      with:
#        args: 'https://github.com/WindyCloudCute/LANraragi_Chinese/releases/tag/{{ RELEASE_VERSION }}'
#    - uses: Ilshidur/action-discord@master
#      with:
#        args: 'Docker image and Windows installer are building... Please wait warmly. ☕'
